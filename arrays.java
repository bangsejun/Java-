// 프로그래밍에서 빠지지 않는 배열입니다.
/*
배열 이란, 여러값을 저장하는 공간이라 보시면 됩니다.
기존의 변수가 하나의 값만 저장했다면 배열(Arrays) 는 여러가지의 값을 저장할 수 있는거죠.
 */
// 배열을 배우기 전에 정수의 Overflow(오버플로우) 를 알아보겠습니다.
// Overflow 란 int 가 표현할 수 있는 21억 어쩌고 어쩌고를 넘었을 때 나타나는 것입니다.(long 이여도 한도를 초과하면 저렇게 됨)
// 21억 어쩌고 어쩌고를 넘었을 땐 -21억, -21억 어쩌고 어쩌고를 넘었을 땐 21억으로 갑니다.
// 이건 함 알아두고 가시면 좋을 것 같아 정리해봤습니다.

// 이제 배열.

public class arrays {
    public static void main(String[] args) {
        String[] a = {"뿌에엑", "뿌뿌뿡", "빵빵빵"}; // 배열 생성은 변수 생성과 비슷하다.
        // 변수 생성과 같이 String 으로 문자열 타입 변수를 생성하고 [](대괄호)를 붙여 배열을 선언하였다.
        // 배열의 내용은 {}(중괄호) 안에 넣으며 ,(COMMA) 로 구분한다.

        // 프로그래밍 세상에선 모든 숫자가 0 부터 시작하시는 것은 알고 계실겁니다.

        System.out.println(a[0]); // 배열을 구조해체하여 0번째(뿌에엑) 에 있는 값을 가져왔습니다.
        // 뿌에엑이 출력됩니다.

        // 배열은 실제로 프로그래밍에서 많이 쓰입니다.

        // 배열을 다른 방법으로 선언하고 사용하는 방법, 초기화

        a[0] = "빵빵"; // a 의 1번째 값을 '빵빵'으로 변경 (초기화)
        System.out.println(a[0]);

        String[] b = new String[4]; // 5개의 값이 있는 배열을 생성
        b[0] = "빵"; // 초기화
        b[1] = "빵dndndndndn";

        System.out.println(b[0] + b[1]);

        // 2차원 배열의 선언과 초기화 (3차원 이런것도 됨)

        String[][] n = {
            {"헤헤", "헿헿"},
            {"히히", "힣힣"},
            {"허허", "헣헣"}
        }; // 2차원 배열은 Type 뒤에 [](대괄호) 두개를 붙이면 된다.

        System.out.println(n[2][0]);
        // 여기서 [] 안의 값이 배열의 개수보다 크면 오류납니다.

        // 2차원 배열은 타입[] 변수[], 타입 변수[][] 이런식으로 선언해도 상관없습니다.

        // 2차원 배열의 초기화

        int[][] m = new int[4][4]; // 5행 5열의 배열을 선언한다.

        m[1][2] = 2134; // 배열의 초기화

        System.out.println(m[1][2]);

        // 30분에 다시 합시다.
    }
}